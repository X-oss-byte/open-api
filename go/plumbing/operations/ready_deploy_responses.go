// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/v2/go/models"
)

// ReadyDeployReader is a Reader for the ReadyDeploy structure.
type ReadyDeployReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadyDeployReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewReadyDeployCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewReadyDeployDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadyDeployCreated creates a ReadyDeployCreated with default headers values
func NewReadyDeployCreated() *ReadyDeployCreated {
	return &ReadyDeployCreated{}
}

/*
ReadyDeployCreated handles this case with default header values.

Ready
*/
type ReadyDeployCreated struct {
	Payload *models.Deploy
}

func (o *ReadyDeployCreated) Error() string {
	return fmt.Sprintf("[POST /deploys/{deploy_id}/ready][%d] readyDeployCreated  %+v", 201, o.Payload)
}

func (o *ReadyDeployCreated) GetPayload() *models.Deploy {
	return o.Payload
}

func (o *ReadyDeployCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deploy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadyDeployDefault creates a ReadyDeployDefault with default headers values
func NewReadyDeployDefault(code int) *ReadyDeployDefault {
	return &ReadyDeployDefault{
		_statusCode: code,
	}
}

/*
ReadyDeployDefault handles this case with default header values.

error
*/
type ReadyDeployDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the ready deploy default response
func (o *ReadyDeployDefault) Code() int {
	return o._statusCode
}

func (o *ReadyDeployDefault) Error() string {
	return fmt.Sprintf("[POST /deploys/{deploy_id}/ready][%d] readyDeploy default  %+v", o._statusCode, o.Payload)
}

func (o *ReadyDeployDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReadyDeployDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
